// {
//   "version": "0.2.0",
//   "configurations": [
//       {
//           "name": "(Windows) Launch",
//           "type": "cppvsdbg",
//           "request": "launch",
//           "program": "cmd",
//           "preLaunchTask": "echo",
//           "args": [
//               "/C",
//               "${fileDirname}\\${fileBasenameNoExtension}.exe",
//               "&",
//               "echo.",
//               "&",
//               "pause"
//           ],
//           "stopAtEntry": false,
//           "cwd": "${workspaceFolder}",
//           "environment": [],
//           "externalConsole":true
//       },
//       {
//           "name": "(gdb) Launch",
//           "type": "cppdbg",
//           "request": "launch",
//           "program": "${workspaceFolder}/${fileBasenameNoExtension}.exe",
//           "args": [],
//           "stopAtEntry": false,
//           "cwd": "${workspaceFolder}",
//           "environment": [],
//           "externalConsole": true,
//           "MIMode": "gdb",
//           "miDebuggerPath": "D:\\DevTools\\MinGW\\mingw810\\bin\\gdb.exe",// 自己电脑的gdb
//           "preLaunchTask": "echo",//这里和task.json的label相对应
//           "setupCommands": [
//               {
//                   "description": "Enable pretty-printing for gdb",
//                   "text": "-enable-pretty-printing",
//                   "ignoreFailures": true
//               }
//           ]

//       }
//   ]
// }

// {  
//     "version": "0.2.0",  
//     "configurations": [  
//         {  
//          "name": "(gdb) Launch", // 配置名称，将会在启动配置的下拉菜单中显示  
//         "type": "cppdbg",       // 配置类型，这里只能为cppdbg  
//          "request": "launch",    // 请求配置类型，可以为launch（启动）或attach（附加）  
//         "program": "${fileDirname}/${fileBasenameNoExtension}", //将要进行调试的程序的路径  
//         "args": [],             // 程序调试时传递给程序的命令行参数，一般设为空即可  
//          "stopAtEntry": false,   // 设为true时程序将暂停在程序入口处，一般设置为false  
//          "cwd": "${workspaceFolder}", // 调试程序时的工作目录，一般为${workspaceFolder}即代码所在目录  
//          "environment": [],  
//          "externalConsole": true, // 调试时是否显示控制台窗口，一般设置为true显示控制台====用true的时候需要在return的上面加getchar（）；  
//          "MIMode": "gdb",  
//          "miDebuggerPath": "D:\\DevTools\\MinGW\\mingw810\\bin\\gdb.exe", // miDebugger的路径，注意这里要与MinGw的路径对应  
//          "preLaunchTask": "Compile", // 调试会话开始前执行的任务，一般为编译程序，c++为g++, c为gcc  
//          "setupCommands": [  
//                 {   
// 		    "description": "Enable pretty-printing for gdb",  
//                     "text": "-enable-pretty-printing",  
//                     "ignoreFailures": false  
//                 }  
//             ]  
//         }  
//     ]
// }  

// launch.json

{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "(gdb) Launch", //这个应该是F1中出现的名字
            "preLaunchTask": "Build",  //在launch之前运行的任务名，这个名字一定要跟tasks.json中的任务名字大小写一致
            "type": "cppdbg",
            "request": "launch",
            "program": "${fileDirname}/${fileBasenameNoExtension}.exe", //需要运行的是当前打开文件的目录中，名字和当前文件相同，但扩展名为exe的程序
            "args": [],
            "stopAtEntry": false, // 选为true则会在打开控制台后停滞，暂时不执行程序
            "cwd": "${workspaceFolder}", // 当前工作路径：当前文件所在的工作空间
            "environment": [],
            "externalConsole": true,  // 是否使用外部控制台，选false的话，我的vscode会出现错误
            "MIMode": "gdb",
            "miDebuggerPath": "D:\\DevTools\\MinGW\\mingw810\\bin\\gdb.exe",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        }]
}

